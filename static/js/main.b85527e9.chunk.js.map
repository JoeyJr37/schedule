{"version":3,"sources":["components/data.js","components/Table.js","App.js","index.js"],"names":["data","time","activity","Table","timeSets","map","day","split","timeSet","parseInt","forEach","set","activityMap","i","push","className","App","props","state","calculateDate","bind","updateDay","updateTime","val","this","setState","date","Date","minutes","getMinutes","hour","getHours","getDay","console","log","setTime","table","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b85527e9.chunk.js","sourcesContent":["const data = [\n    {\n        time: '500 - 600',\n        activity: 'Wake up & Feed Isabelle'\n    },\n    {\n        time: '600 - 700',\n        activity: ['Prayer & Worship', 'Intercession', 'Meditation on Gospel reading', 'Consider how to apply/respond']\n    },\n    {\n        time: '700 - 755',\n        activity: 'Web Development',\n    },\n    {\n        time: '755 - 830',\n        activity: 'Travel'\n    },\n    {\n        time: '830 - 900',\n        activity: 'Coffee & check email',\n    },\n    {\n        time: '900 - 930',\n        activity: 'Prayer / Read Psalms / Review Gospel reading'\n    },\n    {\n        time: '930 - 1100',\n        activity: 'Focused deep work',\n    },\n    {\n        time: '1100 - 1115',\n        activity: 'Take a break / Walk around / Get outside'\n    },\n    {\n        time: '1115 - 1215',\n        activity: 'Focused deep work'\n    },\n    {\n        time: '1215 - 1315',\n        activity: 'Lunch: read Psalms / Review Gospel Reading / Journal / Pray'\n    },\n    {\n        time: '1315 - 1545',\n        activity: 'Focused deep work',\n    }, \n    {\n        time: '1545 - 1730',\n        activity: 'Admin / Relational'\n    }\n]\n\nexport default data","import React from 'react';\nimport data from './data'\nimport './table.css';\n\nconst Table = ({time}) => {\n    const timeArray = data.map(day => {\n        return day.time.split(' - ');\n    })\n\n    const timeSets = timeArray.map(timeSet => {\n        return ([parseInt(timeSet[0], 10), parseInt(timeSet[1], 10), false]);\n        })\n    \n    timeSets.forEach(set => {\n        if (set[0] < time && set[1] > time){\n            set[2] = true\n        }\n    })\n\n    const activityMap = data.map(day => day.activity)\n   timeSets.forEach((timeSet, i) => {\n        timeSet.push(activityMap[i]);\n    })\n\n    return (\n        <table className='table'>\n            <tbody>\n                <tr>\n                    <th className='time'> Time </th>\n                    <th> Activity </th>\n                </tr>\n                {timeSets.map((timeSet, i) => {\n                    if (timeSet[2] === true){\n                        return (<tr className= 'active' key={i}>\n                            <td>{`${timeSet[0]} - ${timeSet[1]}`}</td>\n                            <td>{timeSet[3]}</td>\n                        </tr>)\n                    } else {\n                        return (<tr key={i}>\n                            <td>{`${timeSet[0]} - ${timeSet[1]}`}</td>\n                            <td>{timeSet[3]}</td>\n                        </tr>);\n                    }\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nexport default Table;","import React, { Component } from 'react';\nimport './App.css';\nimport Table from './components/Table'\n\nclass App extends Component{\n  constructor(props){\n    super(props)\n\n    this.state = {\n      day: '',\n      time: '',\n    }\n    this.calculateDate = this.calculateDate.bind(this);\n    this.updateDay = this.updateDay.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n  }\n\n  updateDay(val){\n    this.setState({ day: val})\n  }\n\n  updateTime(){\n    const date = new Date();\n    let minutes = date.getMinutes();\n    let hour = date.getHours();\n    if (minutes < 10){\n      minutes = `0${minutes}`;\n    }\n    const time = `${hour}${minutes}`;\n    // console.log(time);\n    return parseInt(time, 10);\n  }\n\n  setTime(){\n    const time = this.updateTime();\n    this.setState({ time });\n  }\n\n  calculateDate(){\n    const date = new Date();\n    const day = date.getDay();\n\n    if (day === 0){\n      this.updateDay('Sunday');\n    } else if (day === 1){\n      this.updateDay('Monday');\n    } else if (day === 2){\n      this.updateDay('Tuesday');\n    } else if (day === 3){\n      this.updateDay('Wednesday');\n    } else if (day === 4){\n      this.updateDay('Thursday');\n    } else if (day === 5){\n      this.updateDay('Friday');\n    } else if (day === 6){\n      this.updateDay('Saturday');\n    } else {\n      console.log(`Error! Create case to handle day number: ${day}`);\n    }\n    \n  }\n\n  componentDidMount(){\n    this.calculateDate();\n    this.setTime();\n  }\n\n  render(){\n    const { day } = this.state;\n    let table;\n    if (day === 'Friday'){\n      table = (<h1>'Its the weekend!'</h1>)\n    } else if (day === 'Saturday') {\n      table = (<h2> 'Its the weekend!'</h2>)\n    } else if (day === 'Sunday'){ \n      table = (<h2> 'Its the weekend!'</h2>)\n    } else { \n      table = (<Table time={this.state.time}/>)\n    }\n\n    return (\n      <div className='App'>\n        <h1> Welcome back Joey </h1>\n        <h2> Today is {this.state.day}</h2>\n        <h3> Here is your schedule to consistently dwell with God today: </h3>\n        <section className='schedule'>\n          {table}\n        </section>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}